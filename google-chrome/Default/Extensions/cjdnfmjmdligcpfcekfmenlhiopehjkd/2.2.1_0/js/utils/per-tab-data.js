const __perTabDataNames=new WeakMap;class PerTabData{constructor(e={},t){const a=new Emittery;["on","off","once","onAny","emit","emitSerial"].forEach(e=>{this[e]=a[e].bind(a)});const{name:n=uuid.v4()}=e;delete e.name,__perTabDataNames.set(this,n),Object.assign(this,e);["onRemoved","onUpdated","onActivated"].forEach(e=>{browser.tabs[e].addListener((...t)=>{this.emit(e,[...t]),this[e]([...t])})},this);const o=[(...e)=>{this.emit("onBeforeNavigate",[...e]),this.onBeforeNavigate(...e)}];t&&o.push(t),browser.webNavigation.onBeforeNavigate.addListener(...o)}get name(){return __perTabDataNames.get(this)}onRemoved([e]){delete this[e]}onUpdated(){this.warnOnUnimplemented&&console.warn(`[${this.name}]: Unimplemented onUpdated`)}onActivated(){this.warnOnUnimplemented&&console.warn(`[${this.name}]: Unimplemented onActivated`)}onBeforeNavigate({tabId:e}){if(this.runRemoveOnBeforeNavigate)return this.onRemoved([e]);this.warnOnUnimplemented&&console.warn(`[${this.name}]: Unimplemented onBeforeNavigate`)}}try{global&&global.module&&(global.module.exports=PerTabData)}catch(e){}