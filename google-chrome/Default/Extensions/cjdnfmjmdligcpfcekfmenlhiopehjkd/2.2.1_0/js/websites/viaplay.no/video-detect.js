(async()=>{async function e(e,t){let o,a;const{_links:{"viaplay:product":{href:i}}}=t;try{const e=await fetch(i),t=await e.text(),n=JSON.parse(t),{_embedded:{"viaplay:product":{content:{images:d={},series:r={},originalTitle:s}}}}=n,{landscape:c={}}=d,{url:w}=c;a=w;const{episodeTitle:l,title:p}=r;o=s,l&&p&&(o=`${l} - ${p}`)}catch(e){}return{videoSelector:"webpage",videoURL:e,videoData:{title:o,poster:a,premiumContent:!0,referer:window.location.href},referer:window.location.href,origin:window.location.href,strategies:null,headers:[]}}if(window.twoseven.processConfig=e,window!==window.top)return;const t=new RegExp("https://(.*\\.)?viaplay\\.no/player/default/.*"),o="[viaplay.no:media-detector]",a=o,i=browser.runtime.connect({name:o});async function n(o=window.location.href){twosevenExtLog(a,`Moving to ${o}`),i.postMessage({action:"clear-tab-media"}),t.test(o)?window.addEventListener("found-media",async function(t){const a=await e(o,t.detail.data);i.postMessage({action:"add-tab-media",from:"websites/viaplay.no/video-detect",to:"bg/tag-media",data:a})}):twosevenExtLog(a,`Does not match videoRegex pattern: ${o}`)}window.addEventListener("pushstate",e=>n(`${window.location.origin}${e.detail.data.uri}`)),n()})();