const mediaFinderReady=new Deferred,MEDIA_FINDER_LEVELS={DEFAULT:0,LAST:-1,FIRST:1,ALWAYS_FIRST:2,ALWAYS_LAST:-2};var PROCESS_RESPONSE_INTO_MEDIA=!0;const blacklistedTabs=new PerTabData,{twoseven:{blacklistedUrls:blacklistedUrls,blacklistedPageUrls:blacklistedPageUrls}}=window;class MPDManifest{constructor(e,t){this.url=e,t&&(this.manifest=mpdParser.parse(t,{manifestUri:e}))}async getManifest(e=this.url){const t=await fetch(e),s=await t.text();return mpdParser.parse(s,{manifestUri:e})}async findAllUris(e,t){}async findAllSegments(e=this.manifest,t=this.url){e||(e=await this.getManifest(t));const s=[];return await new ManifestUri(t).findAllSegments(e,s,t),s}}class ManifestUri{constructor(e){this.masterUrl=e}buildManifestUri(e){var t;if("/"===e[0])t=new URI(new URI(this.masterUrl).origin()+e);else if(!(t=new URI(e)).protocol()){if(1===t.segment().length)t=new URI(this.masterUrl).filename(t.filename());else{const e=new URI(this.masterUrl),s=e.segment();s.pop(),s.push(...t.segment()),e.segment(s),t=e}}return t.toString()}async findAllUris(e,t){for(const[s,a]of Object.entries(e))if("segments"!==s)if("object"!=typeof a){if("uri"===s){const e=this.buildManifestUri(a);t.push(e);const s=new URI(e);s.addQuery({"ts-ignore":!0});const r=s.toString(),n=await(await fetch(r)).text(),i=new m3u8Parser.Parser;i.push(n),i.end();const o=i.manifest;await this.findAllUris(o,t)}}else await this.findAllUris(a,t)}async findAllSegments(e,t,s=this.masterUrl){const a=new Set,r=Flat.flatten(e),n=Object.entries(r).filter(e=>!e[0].includes("segment")&&e[0].endsWith("uri")).map(e=>e[1]).filter(e=>!!e);await Promise.all(n.map(async e=>{const s=this.buildManifestUri(e),a=new URI(s);a.addQuery({"ts-ignore":!0});const r=a.toString();try{const s=await axios.head(r),{headers:a}=s,{"content-type":n}=a;if(n.includes("mp4"))return void t.push(e)}catch(e){}const n=await fetch(r),i=await n.text(),o=new m3u8Parser.Parser;o.push(i),o.end();const d=o.manifest;return this.findAllSegments(d,t,s)}));for(const[t,r]of Object.entries(e))switch(t){case"segments":{const e=new URI(s).normalize().toString();r.map(t=>{const{uri:s}=t;if(!s.startsWith("http")){const a=new URI(e);a.filename(s),t.uri=a.toString()}return t}).forEach(a.add,a);break}}const i=Object.entries(r).filter(e=>e[0].includes(".segments.")).map(e=>e[1]).filter(e=>!!e&&"string"==typeof e),o=new RegExp("https?://.*");for(const e of i)o.test(e)&&a.add(e);t.push(...a)}}class SegmentedJSONManifest{constructor(e){this.url=e}async findAllSegments(e){const t=[];if(!e){const t=new URI(this.url);t.addQuery({"ts-ignore":!0});const s=await fetch(t.toString()),a=await s.text();e=JSON.parse(a)}const{base_url:s,video:a=[],audio:r=[]}=e;let n=new URI(this.url).normalize();if(n.query({}),s)if(s.startsWith("http"))n=new URI(s);else{const e=n.directory();n.directory(`${e}/${s}`)}const i=[...a,...r];for(const e of i){const{base_url:s="",segments:a=[]}=e;let r=new URI(n.toString());if(s)if(s.startsWith("http"))r=new URI(s);else{const e=r.directory();r.directory(`${e}/${s}`)}r.normalize();for(const e of a){const{url:s}=e;let a=new URI(r.toString());s.startsWith("http")?a=new URI(s):a.filename(s),a.normalize(),t.push(a.toString())}}return t}}!function(){const e="common-media-finder",t={};Object.keys(MEDIA_FINDER_LEVELS).forEach(e=>{t[MEDIA_FINDER_LEVELS[e]]={}});const s=window.twoseven.cmfRequests={};window.registerMediaFinder=function(e,s){s||(s=MEDIA_FINDER_LEVELS.DEFAULT);const a=md5(""+e.check);return t[s][a]=e,`${s}:${a}`},window.unregisterMediaFinder=function(e){const s=e.split(":")[0];delete t[s][e]};const a=["blocking","requestHeaders"];async function r(t,s,a){const{requestHeaders:r}=a,i=new URI(t.url);let o;const{mediaType:d}=s;switch(d){case"html5":i.filename().endsWith(".ts")||(o=n(t,s,a));break;case"hls":{const i=await fetch(t.url,{method:"GET",headers:{"x-twoseven-ext":JSON.stringify(r)}}),l=await i.text();if(shouldIgnoreTabMedia(t.tabId,t.url))return;l.includes("#EXT-X-STREAM-INF"),console.log(`Parsing manifest from tabId=${t.tabId}`);const c=new m3u8Parser.Parser;c.push(l),c.end();const u=c.manifest;await async function e(t,s,a,r){const n=[],i=new ManifestUri(a);await i.findAllUris(r,n);var o=n.map(async r=>{window.ignoreTabMedia(t,r);try{const n=await(await fetch(r,{method:"GET",headers:{"x-twoseven-ext":JSON.stringify(s)}})).text(),i=new m3u8Parser.Parser;i.push(n),i.end();const o=i.manifest;await e(t,s,a,o)}catch(e){}});await Promise.all(o)}(t.tabId,r,t.url,u);const m=[];await new ManifestUri(t.url).findAllSegments(u,m),m.forEach(({uri:e})=>{window.ignoreTabMedia(t.tabId,e)}),twosevenExtLog(e,`[response-headers]: Found valid media of type: ${d} (${t.url})`),(o=await n(t,s,a)).videoData.numSegments=m.length;break}case"dash":{const i=await fetch(t.url,{method:"GET",headers:{"x-twoseven-ext":JSON.stringify(r)}}),l=await i.text(),c=new MPDManifest(t.url,l),u=await c.findAllSegments();u.forEach(e=>{window.ignoreTabMedia(t.tabId,e)}),twosevenExtLog(e,`[response-headers]: Found valid media of type: ${d} (${t.url})`),(o=await n(t,s,a)).videoData.numSegments=u.length;break}case"audio":o=await n(t,s,a)}}async function n(t,s,a,r={}){const{tabId:n,frameId:i,url:o}=t,{requestHeaders:d}=a,l=JSON.parse(JSON.stringify(d));let c,u=getHeaderValue("referer",d);try{c=(await new Promise(e=>browser.webNavigation.getFrame({tabId:n,frameId:i},e))).url}catch(t){}u||(u=c),c!==u&&(u=c);const m=getHeaderValue("origin",d)||new URI(u||o).origin(),{type:f,mediaType:p,contentType:w}=s,h=a.url;let g;switch(p){case"html5":g="url";break;case"hls":g="hls";break;case"dash":g="mpd"}const b={videoSelector:"web",referer:u,videoURL:`${g}:${h}`,videoData:{module:{name:"generic",loadMediaFromModule:!1,callModuleBG:!0,addHeaders:!0},referer:u,plyrProvider:"html5",plyrType:f,plyrContentType:w,tabId:n,mediaType:p},origin:m,from:e,strategies:["url","iframe"],tabId:n,headers:l},y=await buildMediaEntryForWebsite(n,m,b);if(void 0===y||y)return deepmerge(b,r),addTabMedia(n,i,b),b}is.chrome(">=72")&&a.push("extraHeaders"),browser.webRequest.onBeforeSendHeaders.addListener(e=>{var a=!1,r=[];return isPausedOnAllWebsites()||isPausedOnWebsite(e.url)||isPausedOnWebsite(tabURLs[e.tabId])?{requestHeaders:e.requestHeaders}:(function(){const e=[];return Object.values(MEDIA_FINDER_LEVELS).sort().reverse().forEach(s=>{t[s]&&Object.values(t[s]).forEach(t=>e.push(t))}),e}().forEach(t=>{t.check(e)&&(r.push(t),a=!0)}),a?((r=r.filter(t=>!t.skipOnTwoSeven||!isRequestOnTwoSeven(e))).forEach(t=>{t.callback(e)}),{requestHeaders:e.requestHeaders}):(e.url.includes(".m3u8")&&console.warn(`Ignoring m3u8 file=${new URI(e.url).filename()} tabId=${e.tabId}?`),!isRequestOnTwoSeven(e)&&PROCESS_RESPONSE_INTO_MEDIA&&(s[e.requestId]=e,setTimeout(()=>{delete s[e.requestId]},3e4)),{requestHeaders:e.requestHeaders}))},{urls:["<all_urls>"]},a),PROCESS_RESPONSE_INTO_MEDIA&&browser.webRequest.onHeadersReceived.addListener(async function(e){const{tabId:t,frameId:a,url:n}=e,i=tabURLs[e.tabId];if(isPausedOnAllWebsites()||isPausedOnWebsite(i)||blacklistedTabs[t]||blacklistedPageUrls.some(t=>e.initiator&&e.initiator.match(t)||i&&i.match(t))||blacklistedUrls.some(t=>e.url.match(t)))return void delete s[e.requestId];const o=new URI(n);if(o.query(!0)["ts-ignore"])return delete s[e.requestId],{responseHeaders:e.responseHeaders};const d=function(e,t){t.includes(".m3u8")?(e.startsWith("text")||e.includes("octet-stream"))&&(e="application/x-mpegurl"):t.includes(".mpd")?(e.startsWith("text")||e.includes("octet-stream"))&&(e="application/dash+xml"):t.includes(".mp4")&&(e.includes("video")||(e="video/mp4"));const s=(e,t)=>{for(const s of t){if("string"==typeof s&&e.includes(s))return!0;if(s instanceof RegExp&&s.test(e))return!0}return!1};return s(e=e.toLowerCase(),["video/mp4","video/webm","video/ogg","video/x-m4v",/video\/.*/])?{type:"video",mediaType:"html5",contentType:e}:s(e,["application/vnd.apple.mpegurl","audio/x-mpegurl","audio/mpegurl","application/x-mpegurl","application/octet-stream-m3u8"])?{type:"video",mediaType:"hls",contentType:e}:s(e,["audio/wav",/audio\/mpeg$/,"audio/mp3","audio/aac","audio/aacp","audio/ogg","audio/flac"])?{type:"audio",mediaType:"html5",contentType:e}:s(e,["application/dash+xml","video/vnd.mpeg.dash.mpd"])?{type:"video",mediaType:"dash",contentType:e}:{type:null,mediaType:null,contentType:null}}(getHeaderValue("content-type",e.responseHeaders)||"application/octet-stream",e.url),{mediaType:l,contentType:c}=d,u=s[e.requestId];if(delete s[e.requestId],!u)return{responseHeaders:e.responseHeaders};const m=u.requestHeaders;if(!m)return{responseHeaders:e.responseHeaders};if(blacklistedPageUrls.some(e=>{const t=getHeaderValue("origin",m)||"",s=getHeaderValue("referer",m)||"";return!(!t.match(e)&&!s.match(e))}))return{responseHeaders:e.responseHeaders};if(!n.includes("master.json")){if(c&&l)if(getHeaderValue("referer",m))r(e,d,u);else{let s=!0;-1===t&&(s=!1),s?new Promise(e=>browser.webNavigation.getFrame({tabId:t,frameId:a},async t=>{try{addHeaderEntry("referer",t.url,m)}catch(e){}e()})).then(()=>r(e,d,u)):r(e,d,u)}else n.includes(".m3u8")&&console.warn(`Did not consider an m3u8 file: ${o.filename()}`);return{responseHeaders:e.responseHeaders}}{const s=n.replace(/master\.json/,"master.m3u8");try{const t=new SegmentedJSONManifest(n);(await t.findAllSegments()).forEach(t=>{window.ignoreTabMedia(e.tabId,t)})}catch(e){}browser.tabs.executeScript(t,{frameId:a,code:`;(async () => {\n          const response = await fetch('${s}')\n          const text = await response.text()\n        })()\n        `})}},{urls:["<all_urls>"]},["responseHeaders"]),mediaFinderReady.resolve()}();