(()=>{const n=new ScriptModifierMap([],"hbo:modify-script"),e="[hbo-sync]";n.addEntry({key:new XRegExp('(?<original>\\var\\.setDebugData\\("viewPart","video"\\),)'),value:new ScriptModifierEntry({replace:"window.twoseven.hboVideoController && (window.twoseven.hboVideoController.controller=this),${original}"})}),n.addEntry({key:new XRegExp("(?<fnstart>\\var\\.constructor\\(function\\(\\){)(?<fncontent>.*void 0!==.*?this\\._dismissControlsDurationMS=\\var\\.singleton\\.dismissControlsDurationMS\\),.*?)}\\),"),value:new ScriptModifierEntry({replace:`\${fnstart}\${fncontent}\n        ;\n        if (!window.twoseven.hboVideoController || !window.twoseven.hboVideoController.posterController) {\n          window.twoseven.once(window, 'hbo:controller-injected', () => {\n            window.twoseven.hboVideoController.posterController = this\n            window.twoseven.hboVideoController.posterControllerReady.resolve(this)\n            twosevenExtLog('${e}', 'Found poster controller')\n          })\n          triggerEvent(window, 'hbo:inject-controller')\n        }\n      }),`})}),n.addEntry({key:new XRegExp("(?<original>void 0!==(?<var>\\var)\\._current&&(\\var)\\._destroyImageWrapper\\((\\var)\\._current\\))"),value:new ScriptModifierEntry({replace:"\n      try {\n        if (${var}.uri && ${var}.uri.includes('artist') && ${var}.uri.includes('background')) {\n          const { twoseven: { hboVideoController } } = window\n          hboVideoController && hboVideoController.posterReady && hboVideoController.posterReady.resolve()\n        }\n      } catch (e) {\n      }\n      ;${original}"})}),n.addEntry({key:new XRegExp("(?<fnstart>enterFullscreen:function\\((?<var>.)\\){)(?<fncontent>var .=.\\._wrappedElement;)"),value:new ScriptModifierEntry({replace:'${fnstart} window.triggerEvent(window, "user-clicked-fullscreen"); ${var}._wrappedElement.classList.add("twoseven-fullscreen"); ${fncontent}'})}),n.addEntry({key:new XRegExp("var (?<var>.)=(?<content>(.)\\.requestFullscreen\\|\\|(.)\\.webkitRequestFullscreen)+"),value:new ScriptModifierEntry({replace:"var ${var}=function(){}||${content}"})}),n.addEntry({key:new XRegExp("(?<fnstart>_trySetFullscreenState:function\\(.\\){)(?<fncontent>!0===.\\.singleton\\.supportsFullscreen&&\\(!0===.\\?.\\.singleton\\.enterFullscreen\\(this._displayProxy\\):.\\.singleton\\.exitFullscreen\\(\\),)(?<skip>this._tryUpdateNavigationBar\\(function\\(.\\){.\\.isPointerHittable=!0!==.}\\),)?(?<content>this._transportControls.dismissOpenOverlays\\(\\)\\)})"),value:new ScriptModifierEntry({replace:"${fnstart}${fncontent}${content}"})}),n.addEntry({key:new XRegExp("(?<fnstart>this._loadVideoPromise=_\\.all\\(\\[(\\var,?)+\\]\\)\\.then\\(function\\(\\){.*?var (?<var>\\var)=\\var\\.currentPlayItem;)"),value:new ScriptModifierEntry({replace:"${fnstart}\n        window.twoseven.textTracks = ${var}.textTracks;\n      "})}),n.addEntry({key:new XRegExp("(?<fnstart>_setDefaultTextTrackPromise:function\\((?<var>.)\\){)"),value:new ScriptModifierEntry({replace:"${fnstart}window.twoseven.textTracks = window.twoseven.textTracks || ${var}.textTracks;"})}),n.addEntry({key:new XRegExp("(?<fnstart>loadClosedCaptions:function\\([a-z,]+\\){)(?<fncontent>.*?return!0!==(?<var>.)\\.singleton\\.hasPlatformRenderer)"),value:new ScriptModifierEntry({replace:"${fnstart}\n      if (window.twoseven.textTracks) {\n        window.twoseven.textTracks.controller = ${var}.singleton;\n      };\n      ${fncontent}"})}),n.addEntry({key:new XRegExp("play:function\\(\\){(?<fncontent>.*?this\\._video\\.playbackState!==\\var\\.CLOSED\\?this._video.play)"),value:new ScriptModifierEntry({replace:`play:function(fromJS){\n        twosevenExtLog("${e}", 'playing' + '(fromJS=' + fromJS + ')');\n        if (!fromJS) {\n          return window.triggerEvent(window, "user-clicked-play");\n        };\n        \${fncontent}`})}),n.addEntry({key:new XRegExp("pause:function\\(\\){(?<fncontent>.*?this\\._video\\.playbackState!==\\var\\.CLOSED\\?this._video.pause)"),value:new ScriptModifierEntry({replace:`pause:function(fromJS){\n        twosevenExtLog("${e}", 'pausing' + '(fromJS=' + fromJS + ')');\n        if (!fromJS) {\n          return window.triggerEvent(window, "user-clicked-pause");\n        };\n        \${fncontent}`})}),n.addEntry({key:new XRegExp("(?<fnstart>set:function\\((?<var>\\var)\\){)(?<fncontent>\\var\\._seekPosition=\\var;)"),value:new ScriptModifierEntry({replace:`\${fnstart}\n      let fromJS = typeof \${var} === "object";\n      if (fromJS) {\n        \${var} = \${var}.position\n      };\n      twosevenExtLog("${e}", "seeked to: " + \${var} + "(fromJS=" + fromJS + ')');\n      if (!fromJS) {\n        return window.triggerEvent(window, "user-seeked", {position: \${var}});\n      };\n      \${fncontent}`})}),n.addEntry({key:new XRegExp("(?<fnstart>_transitionTo:function\\((?<model>\\var),(?<next>\\var),(\\var,?)+\\){)"),value:new ScriptModifierEntry({replace:"${fnstart}\n      try {\n        if (${next}) {\n          const newURL = window.location.origin + ${next}.uri\n          triggerEvent(window, 'next-item', { videoURL: newURL })\n        }\n      } catch (e) {\n      }\n      "})}),n.addEntry({key:new XRegExp("(?<fnstart>getContextualData:function\\(\\){)(?<fncontent>return{)"),value:new ScriptModifierEntry({replace:"${fnstart}\n      // debugger\n      ${fncontent}\n      "})}),n.addEntry({key:new XRegExp("(?<fnstart>\\var\\.prototype\\._notifyUnhandledRejection=function\\(\\){)"),value:new ScriptModifierEntry({replace:"${fnstart}"})}),window.twoseven.hboModifyScriptMap=n})();